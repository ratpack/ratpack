// This only gets applied to the root project
apply plugin: "idea"

idea {
  project {
    jdkName "1.8"
    languageLevel "1.8"
    vcs = "Git"
    wildcards.add 'ratpack.groovy'
    ipr {
      withXml { provider ->
        def node = provider.asNode()

        def newCodeStyle = new XmlParser().parse(file("gradle/idea/codeStyle.xml"))
        def codeStyleSettingsManager = node.component.find { it.@name == "CodeStyleSettingsManager" }
        if (codeStyleSettingsManager) {
          codeStyleSettingsManager.replaceNode(newCodeStyle)
        } else {
          node.append(newCodeStyle)
        }

        def nullableManager = node.component.find { it.'@name' == 'NullableNotNullManager' }
        if (nullableManager) {
          nullableManager.parent().remove(nullableManager)
        }

        node.append(new XmlParser().parseText("""
          <component name="NullableNotNullManager">
            <option name="myDefaultNullable" value="ratpack.api.Nullable" />
            <option name="myDefaultNotNull" value="" />
            <option name="myNullables">
              <value>
                <list size="1">
                  <item index="0" class="java.lang.String" itemvalue="ratpack.api.Nullable" />
                </list>
              </value>
            </option>
            <option name="myNotNulls">
              <value>
                <list size="0" />
              </value>
            </option>
          </component>
        """))

        def copyrightManager = node.component.find { it.@name == 'CopyrightManager' }
        copyrightManager.@default = "ASL2"
        def aslCopyright = copyrightManager.copyright.option.find { it.@name == "myName" && it.@value == "ASL2" }
        if (aslCopyright == null) {
          copyrightManager.append(new XmlParser().parseText("""
            <copyright>
              <option name="notice" value="Copyright \$today.year the original author or authors.&#10;&#10;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;you may not use this file except in compliance with the License.&#10;You may obtain a copy of the License at&#10;&#10;   http://www.apache.org/licenses/LICENSE-2.0&#10;&#10;Unless required by applicable law or agreed to in writing, software&#10;distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;See the License for the specific language governing permissions and&#10;limitations under the License." />
              <option name="keyword" value="Copyright" />
              <option name="allowReplaceKeyword" value="" />
              <option name="myName" value="ASL2" />
              <option name="myLocal" value="true" />
            </copyright>
          """))
        }

        def module2copyright = copyrightManager.module2copyright
        def productionCodeModule = module2copyright.element.find { it.@module == "Production" && it.@copyright == "ASL2" }
        if (!module2copyright) {
          copyrightManager.append(new XmlParser().parseText("""
            <module2copyright>
              <element module="Production" copyright="ASL2" />
            </module2copyright>
          """))
        } else if (productionCodeModule == null) {
          module2copyright.first().append(new XmlParser().parseText("""
              <element module="Production" copyright="ASL2" />
          """))
        }

        def javacSettings = node.component.find { it.@name == 'JavacSettings' }
        if (!javacSettings) {
          node.append(new XmlParser().parseText("""
          <component name="JavacSettings">
            <option name="ADDITIONAL_OPTIONS_STRING" value="-Werror -Xlint:all -Xlint:-options -Xlint:-serial -Xlint:-classfile" />
          </component>
          """))
        }
      }
    }
  }
}
