/*
* Copyright 2013 the original author or authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

ext {
  commonVersions = [
    caffeine         : "2.9.3", // 3.x requires Java 11
    commonsCodec     : "1.14",
    commonsLang3     : "3.12.0",
    commonsLogging   : "1.2",
    dropwizardMetrics: "4.2.21",
    groovy           : "3.0.9", // Gradle 7.4 uses Groovy 3.0.9
    guava            : "31.1-jre",
    guice            : "7.0.0",
    jackson          : "2.13.3",
    javassist        : "3.29.0-GA",
    log4j            : "2.17.2",
    netty            : "4.1.82.Final",
    nettyTCNative    : "2.0.54.Final",
    newrelic         : "7.7.0",
    pegdown          : "1.6.0",
    prometheusClient : "0.15.0",
    reactiveStreams  : "1.0.3",
    reactor          : "3.4.18",
    retrofit         : "2.9.0",
    rxjava2          : "2.2.21",
    shadow           : "7.1.2",
    slf4j            : "1.7.36",
    snakeyaml        : "1.30",
    spock            : "2.1-groovy-3.0",
    springBoot       : "2.7.0",
  ]

  if (System.getenv('CI_GROOVY_VERSION')) {
    // When this environment variable is set, it means Ratpack is compiled on the Groovy CI server
    // which tests latest versions of Groovy against widely used community projects
    commonVersions.groovy = System.getenv('CI_GROOVY_VERSION')
    if (commonVersions.groovy.endsWith('-SNAPSHOT')) {
      allprojects {
        repositories {
          // uncomment this if you want to test with a local version of Groovy
          /*
          def local = mavenLocal()
          remove local
          addFirst local
          */
          maven {
            name 'JFrog OSS snapshot repo'
            url 'https://oss.jfrog.org/oss-snapshot-local/'
          }
        }
      }
    }
    logger.info "Detected joint build CI environment. Overriden Groovy dependency to use ${commonVersions.groovy}"
  }

  commonDependencies = [
    spock      : dependencies.create("org.spockframework:spock-core:${commonVersions.spock}", {
      exclude group: "org.codehaus.groovy", module: "groovy"
    }),
    groovy     : [
      dependencies.create("org.codehaus.groovy:groovy:${commonVersions.groovy}"),
      dependencies.create("org.codehaus.groovy:groovy-xml:${commonVersions.groovy}"),
      dependencies.create("org.codehaus.groovy:groovy-templates:${commonVersions.groovy}"),
      dependencies.create("org.codehaus.groovy:groovy-sql:${commonVersions.groovy}"),
    ],
    guava      : dependencies.create("com.google.guava:guava:$commonVersions.guava", {
      exclude group: "org.checkerframework", module: "checker-qual"
    }),
    guice      : dependencies.create("com.google.inject:guice:$commonVersions.guice", {
      exclude group: "com.google.guava", module: "guava"
    }),
    rxjava2    : "io.reactivex.rxjava2:rxjava:${commonVersions.rxjava2}",
    reactor    : "io.projectreactor:reactor-core:${commonVersions.reactor}",
    reactorTest: "io.projectreactor:reactor-test:${commonVersions.reactor}",
    jackson    : "com.fasterxml.jackson.core:jackson-databind:${commonVersions.jackson}",
    slf4j      : "org.slf4j:slf4j-api:${commonVersions.slf4j}",
    h2         : "com.h2database:h2:2.1.212",
    toolingApi : dependencies.create("org.gradle:gradle-tooling-api:${gradle.gradleVersion}", {
      exclude group: "org.slf4j", module: "slf4j-api"
    }),
    snakeyaml  : "org.yaml:snakeyaml:${commonVersions.snakeyaml}",
    compass    : [
      dependencies.create("rubygems:compass:1.0.3"),
      dependencies.create("rubygems:chunky_png", {
        version {
          strictly '1.2.9'
        }
      })
    ],
    commonsLang3: "org.apache.commons:commons-lang3:${commonVersions.commonsLang3}",
    jsass : [
      dependencies.create("io.freefair.gradle:jsass-plugin:6.4.3") {
        exclude group: "io.bit3", module: "jsass"
      },
      dependencies.create("io.bit3:jsass:5.7.0") {
        because "Force jsass version to 5.7.0 due to https://gitlab.com/jsass/jsass/-/issues/92"
      }
    ]
  ]

  isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { k -> version.toUpperCase().contains(k) }
    def regex = /^[0-9,.v-]+(-r)?$/
    def milestoneRegex = /(?i)^.*[-.](m|alpha|beta|rc)\d?(-.*)?$/ // filter out things that have things like -M1-, .M1, .Alpha7, -rc1
    return !stableKeyword && !(version ==~ regex) && (version ==~ milestoneRegex)
  }

  dependencyUpdateConfig = {
    revision = "release"
    gradleReleaseChannel = "current"
    rejectVersionIf {
      (isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)) || // Don't upgrade stable to non-stable unless we are already using a non-stable
      it.candidate.group == "org.codehaus.groovy" // Don't upgrade groovy because it's tied to Gradle's version
    }
  }
}
