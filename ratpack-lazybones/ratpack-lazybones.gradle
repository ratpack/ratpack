/*
 * Copyright 2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens
import ratpack.gradle.WriteTestConfig

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath "uk.co.cacoethes:lazybones-gradle:1.2.3"
  }
}

apply from: "$rootDir/gradle/javaModule.gradle"
apply plugin: "maven"
apply from: "$rootDir/gradle/projectLocalRepo.gradle"
apply plugin: "uk.co.cacoethes.lazybones-templates"

dependencies {
  compile commonDependencies.toolingApi

  testCompile "commons-io:commons-io:2.4"
  testCompile "org.apache.commons:commons-lang3:3.3.2"
  testCompile project(":ratpack-test-internal")
}

ext {
  generatedTestResourcesDir = file("$buildDir/generated-test-resources")
  compiledTemplateDir = file("$buildDir/lazybones-templates/ratpack")
}

task replaceTemplateTokens(type: Sync) {
  def tokens = [version: version, slf4jVersion: commonVersions.slf4j, spockVersion: commonVersions.spock]
  inputs.properties(tokens)

  from('src/templates/ratpack') {
    include 'build.gradle'
    filter(ReplaceTokens, tokens: tokens)
  }
  from('src/templates/ratpack') {
    exclude 'build.gradle'
  }

  into compiledTemplateDir
}

lazybones {
  templateDirs = files(compiledTemplateDir)
  fileMode "755", "gradlew", "**/*.sh"
  repositoryUrl = "https://api.bintray.com/content/ratpack/lazybones"
  repositoryUsername = project.hasProperty('ratpackBintrayUser') ? ratpackBintrayUser : ""
  repositoryApiKey = project.hasProperty('ratpackBintrayApiKey') ? ratpackBintrayApiKey : ""
  publish = true

  template("ratpack") {
    version = project.version
  }
}

packageTemplateRatpack {
  dependsOn test, replaceTemplateTokens
  it.doFirst {
    if (isSnapshot) {
      throw new GradleException("Cannot publish lazybones template with a snapshot version: $version")
    }
  }
}

task writeTestConfig(type: WriteTestConfig) {
  generatedTestResourcesDir = project.generatedTestResourcesDir
  testProperties.putAll(
    "template.path": project.compiledTemplateDir.absolutePath,
    "localRepo.url": project.localRepoUrl.toString()
  )
}

task prepareTestResources {
  dependsOn { apiModules*.install }
  dependsOn ":ratpack-gradle:install", replaceTemplateTokens, writeTestConfig
}

sourceSets.test.resources.srcDir generatedTestResourcesDir

processTestResources.dependsOn writeTestConfig

test {
  inputs.dir compiledTemplateDir

  dependsOn prepareTestResources

  // Don't run these tests for the joint Groovy build
  onlyIf { !System.getenv("CI_GROOVY_VERSION") }
}
