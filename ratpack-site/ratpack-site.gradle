/*
 * Copyright 2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    maven { url "http://dl.bintray.com/robfletcher/gradle-plugins" }
    mavenCentral()
  }
  dependencies {
    classpath 'org.gradle.plugins:gradle-compass:1.0.7'
  }
}

import org.gradle.plugins.javascript.coffeescript.CoffeeScriptCompile
import org.gradle.plugins.compass.*

apply plugin: 'coffeescript-base'
apply plugin: 'compass'
apply plugin: "ratpack-groovy"

repositories {
  mavenCentral()
  maven { url "http://repo.springsource.org/repo" } // for springloaded
  maven { url "http://repo.gradle.org/gradle/javascript-public/" } // for coffeescript plugin
}

configurations {
  latestManual {}
}

dependencies {
  springloaded "org.springsource.springloaded:springloaded-core:1.1.1"
  compile project(":ratpack-groovy")
  testCompile project(":ratpack-test-support")
  latestManual project(":ratpack-manual")
}

task gatherManuals(type: Sync) {
  inputs.files configurations.latestManual
  into "src/ratpack/public/manual"
  into version, {
    from { zipTree(configurations.latestManual.singleFile) }
  }
}

task prepareContent {
  dependsOn gatherManuals
}

processResources {
  expand snapshot: project.version, current: project.version
}

run {
  dependsOn configureRun, prepareContent
  jvmArgs "-Dratpack.reloadable=true"
}

installApp {
  dependsOn prepareContent
  from run.workingDir
}

task compileCoffee(type: CoffeeScriptCompile) {
  source fileTree('src/main/static/scripts')
  destinationDir file('src/ratpack/public/scripts')
}

processResources.inputs.files compileCoffee

compass {
  cssDir = file('src/ratpack/public/styles')
  sassDir = file('src/main/static/styles')
  imagesDir = file('src/ratpack/public/images')
  importPath = files('../ratpack-stylesheets')
  quiet = true
}

compileSass {
  environment = 'production'
  debugInfo = false
}

clean.dependsOn cleanCompileSass
run.dependsOn watchSass
installApp.dependsOn compileSass

task createScriptsDir {
  doLast {
    mkdir "src/ratpack/public/scripts"
  }
}
configure([watchSass, compileSass]) {
  dependsOn createScriptsDir
}

clean.dependsOn cleanCompileCoffee
clean.dependsOn cleanGatherManuals
